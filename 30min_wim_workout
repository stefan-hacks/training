```
__     _____  ____  ____  
\ \   / /_ _|/ /  \/  \ \ 
 \ \ / / | || || |\/| || |
  \ V /  | || || |  | || |
   \_/  |___| ||_|  |_|| |
             \_\      /_/

```
# 30min_Vim_workout
# By: Stefan-hacks

## Introduction
Welcome to this 30-minute Vim tutorial! Vim is a powerful modal text editor that's highly efficient for both coding and text editing. Let's get started!


## Working with Files

Essential file operations:

```
:q          - Quit
:q!         - Quit without saving
:w          - Save
:wq or :x   - Save and quit
```

## Navigation

```
h    - Move left
j    - Move down
k    - Move up
l    - Move right

w    - Jump to start of next word
b    - Jump to start of previous word
e    - Jump to end of word

0    - Jump to start of line
^    - Jump to the first character on the line
$    - Jump to end of line

}    - Jump to the next paragraph empty space
{    - Jump to the previous paragraph empty space

gg   - Go to first line of file
G    - Go to last line of file
:n   - Go to line number n (e.g., :10 goes to line 10)

Ctrl+u - Move up half a page
Ctrl+d - Move down half a page
Ctrl+f - Move forward one page
Ctrl+b - Move backward one page
```

    Let's practice navigation in this text. Move to the beginning of this line with `0`, then to the end with `$`. Try moving word by word with `w` and `b`. Now go back to the very first character at the beginning of the word "Let's" with `^`.

## Basic Editing

Now let's learn some basic editing commands:

```
i    - Insert before cursor
a    - Insert after cursor
I    - Insert at beginning of line
A    - Insert at end of line
o    - Open new line below
O    - Open new line above
x    - Delete character under cursor
dd   - Delete current line
yy   - Yank (copy) current line
p    - Paste after cursor
P    - Paste before cursor
u    - Undo
Ctrl+r - Redo
.    - Repeat last command
```

Try these commands below:

```
"    Vim (Vi IMproved) is a highly configurable, powerful, and efficient  editor
 originally based on the vi editor developed by Bill Joy. It is widely used in Unix-like
 operating systems and is known for its efficiency and customization options."

```

## Vim Modes

Vim has seven primary modes:

1. **Normal Mode** (Default) - For navigation and commands (Press `Esc`)
2. **Insert Mode** - For typing text (Press `i`)
3. **Visual Mode** - For selecting text (Press `v`)
4. **Visual Line Mode** - For selecting lines (Press `V`)
5. **Visual Block Mode** - For block selection (Press `Ctrl+v`)

```
    linux the planet
    linux the planet
    linux the planet
    linux the planet
```

6. **Command Mode** - For entering commands (Press `:`)
7. **Replace Mode** - For overwriting text (Press `R`)


### SAMPLE EXERCISE
```
Linux
  
     <operating system> ("Linus Unix") /li'nuks/ (but see below)
     An implementation of the {Unix} {kernel} originally written
     from scratch with no proprietary code.
  
     The kernel runs on {Intel} and {Alpha} hardware in the general
     release, with {SPARC}, {PowerPC}, {MIPS}, {ARM}, {Amiga},
     {Atari}, and {SGI} in active development.  The SPARC, PowerPC,
     ARM, {PowerMAC} - {OSF}, and 68k ports all support {shells},
     {X} and {networking}.  The Intel and SPARC versions have
     reliable {symmetric multiprocessing}.
  
     Work on the kernel is coordinated by Linus Torvalds, who holds
     the copyright on a large part of it.  The rest of the
     copyright is held by a large number of other contributors (or
     their employers).  Regardless of the copyright ownerships, the
     kernel as a whole is available under the {GNU} {General Public
     License}.  The GNU project supports Linux as its kernel until
     the research {Hurd} kernel is completed.
  
     This kernel would be no use without {application programs}.
     The GNU project has provided large numbers of quality tools,
     and together with other {public domain} software it is a rich
     Unix environment.  A compilation of the Linux kernel and these
     tools is known as a Linux distribution.  Compatibility modules
     and/or {emulators} exist for dozens of other computing
     environments.
```



## Conclusion

You've completed the basic Vim tutorial! Remember:
- Practice regularly to build muscle memory
- Start with basic commands and gradually add more advanced ones
- Use `:help [command]` to learn more about any command
- Vim's power comes from combining commands (e.g., d2w = delete 2 words)

Happy editing! To exit, type `:wq` and press Enter.


## Advanced Editing Techniques - For those that dare to tread. I encourage those who thirst for more knowledge to look at the below Vim motions

Let's explore more powerful editing commands:

```
dw   - Delete word
cw   - Change word (delete word and enter insert mode)
ci"  - Change inside quotes
ci(  - Change inside parentheses
ct<char> - Change until character
/pattern - Search for pattern
n    - Next search result
N    - Previous search result
:%s/old/new/g - Replace all old with new
:%s/old/new/gc - Replace with confirmation
```


## Code-Specific Techniques

Use these commands for efficient coding:

```
>>    - Indent line
<<    - Unindent line
==    - Auto-indent line
%     - Jump to matching bracket
gd    - Go to definition
g*    - Search for word under cursor
```
Practice on this code snippet:

```javascript
function calculateTotal(items) {
  let total = 0;
  for (let i = 0; i < items.length; i++) {
    total += items[i].price * items[i].quantity;
  }
  return total;
}
```
